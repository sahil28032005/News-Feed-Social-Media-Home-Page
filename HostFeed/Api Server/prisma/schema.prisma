// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//user model
model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  email    String @unique
  password String

  createdAt DateTime  @default(now())
  Post      Post[]
  Comment   Comment[]
  Like      Like[]
}

model Post {
  id       Int     @id @default(autoincrement())
  title    String
  content  String
  mediaUrl String? // URL of media (image or video)
  userId   Int
  user     User    @relation(fields: [userId], references: [id])

  createdAt DateTime  @default(now())
  Comment   Comment[]
  Like      Like[]
}

model Comment {
  id      Int    @id @default(autoincrement())
  content String
  postId  Int
  userId  Int
  user    User   @relation(fields: [userId], references: [id])
  post    Post   @relation(fields: [postId], references: [id])

  createdAt DateTime @default(now())
}

model Like {
  id     Int  @id @default(autoincrement())
  postId Int
  userId Int
  user   User @relation(fields: [userId], references: [id])
  post   Post @relation(fields: [postId], references: [id])

  createdAt DateTime @default(now())

  @@unique([postId, userId]) // Ensures each user can only like a post once
}
